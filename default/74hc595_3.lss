
74hc595_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000003e2  00000476  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800074  00800074  0000048a  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000048a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000ce  00000000  00000000  000004aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000038b  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001a0  00000000  00000000  00000903  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c1  00000000  00000000  00000aa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  00000d64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000015a  00000000  00000000  00000dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000018  00000000  00000000  00000f2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00000f46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 10 01 	jmp	0x220	; 0x220 <__ctors_end>
   4:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
   8:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
   c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  10:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  14:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  18:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  1c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  20:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  24:	0c 94 46 01 	jmp	0x28c	; 0x28c <__vector_9>
  28:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  2c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  30:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  34:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  38:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  3c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  40:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  44:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  48:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  4c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
  50:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>

00000054 <smallFont>:
  54:	00 00 00 00 00 00 00 2f 00 00 00 07 00 07 00 14     ......./........
  64:	7f 14 7f 14 24 2a 7f 2a 12 c4 c8 10 26 46 36 49     ....$*.*....&F6I
  74:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  84:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 00 50 30     ....>....>....P0
  94:	00 10 10 10 10 10 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  a4:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  b4:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  c4:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  d4:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  e4:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
  f4:	32 49 59 51 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IYQ>~...~.III6>
 104:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 114:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 124:	41 00 20 40 41 ff 01 7f 08 14 22 41 7f 40 40 40     A. @A....."A.@@@
 134:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 144:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 154:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 164:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 174:	08 07 61 51 49 45 43 00 7f 41 41 00 55 2a 55 2a     ..aQIEC..AA.U*U*
 184:	55 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40     U.AA.......@@@@@
 194:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1a4:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1b4:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1c4:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1d4:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1e4:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 1f4:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 204:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 214:	50 3c 44 64 54 4c 44 00 06 09 09 06                 P<DdTLD.....

00000220 <__ctors_end>:
 220:	11 24       	eor	r1, r1
 222:	1f be       	out	0x3f, r1	; 63
 224:	cf e5       	ldi	r28, 0x5F	; 95
 226:	d4 e0       	ldi	r29, 0x04	; 4
 228:	de bf       	out	0x3e, r29	; 62
 22a:	cd bf       	out	0x3d, r28	; 61

0000022c <__do_copy_data>:
 22c:	10 e0       	ldi	r17, 0x00	; 0
 22e:	a0 e6       	ldi	r26, 0x60	; 96
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	e2 ee       	ldi	r30, 0xE2	; 226
 234:	f3 e0       	ldi	r31, 0x03	; 3
 236:	02 c0       	rjmp	.+4      	; 0x23c <.do_copy_data_start>

00000238 <.do_copy_data_loop>:
 238:	05 90       	lpm	r0, Z+
 23a:	0d 92       	st	X+, r0

0000023c <.do_copy_data_start>:
 23c:	a4 37       	cpi	r26, 0x74	; 116
 23e:	b1 07       	cpc	r27, r17
 240:	d9 f7       	brne	.-10     	; 0x238 <.do_copy_data_loop>

00000242 <__do_clear_bss>:
 242:	10 e0       	ldi	r17, 0x00	; 0
 244:	a4 e7       	ldi	r26, 0x74	; 116
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	01 c0       	rjmp	.+2      	; 0x24c <.do_clear_bss_start>

0000024a <.do_clear_bss_loop>:
 24a:	1d 92       	st	X+, r1

0000024c <.do_clear_bss_start>:
 24c:	ac 37       	cpi	r26, 0x7C	; 124
 24e:	b1 07       	cpc	r27, r17
 250:	e1 f7       	brne	.-8      	; 0x24a <.do_clear_bss_loop>
 252:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <main>
 256:	0c 94 ef 01 	jmp	0x3de	; 0x3de <_exit>

0000025a <__bad_interrupt>:
 25a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000025e <timer_init>:
}


void timer_init(void)
{
   TCCR0|=(1<<CS00);//|(1<<CS01); add CS01 if you are going to upload in hardware.
 25e:	83 b7       	in	r24, 0x33	; 51
 260:	81 60       	ori	r24, 0x01	; 1
 262:	83 bf       	out	0x33, r24	; 51
    TIMSK|=1<<TOIE0;
 264:	89 b7       	in	r24, 0x39	; 57
 266:	81 60       	ori	r24, 0x01	; 1
 268:	89 bf       	out	0x39, r24	; 57
	}
 26a:	08 95       	ret

0000026c <HC595Init>:

void HC595Init()
{
    HC595_DDR|=((1<<SH_CP_PIN)|(1<<ST_CP_PIN)|(1<<DS_PIN));
 26c:	81 b3       	in	r24, 0x11	; 17
 26e:	87 60       	ori	r24, 0x07	; 7
 270:	81 bb       	out	0x11, r24	; 17
}
 272:	08 95       	ret

00000274 <HC595Pulse>:


void HC595Pulse()
{HC595_PORT|=(1<<SH_CP_PIN);
 274:	92 9a       	sbi	0x12, 2	; 18
 HC595_PORT&=(~(1<<SH_CP_PIN));
 276:	92 98       	cbi	0x12, 2	; 18
}
 278:	08 95       	ret

0000027a <HC595Latch>:

void HC595Latch()
{
  
    HC595_PORT|=(1<<ST_CP_PIN);
 27a:	91 9a       	sbi	0x12, 1	; 18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
 27c:	83 e0       	ldi	r24, 0x03	; 3
 27e:	98 2f       	mov	r25, r24
 280:	9a 95       	dec	r25
 282:	f1 f7       	brne	.-4      	; 0x280 <HC595Latch+0x6>
     _delay_us(1);
    HC595_PORT&=(~(1<<ST_CP_PIN));
 284:	91 98       	cbi	0x12, 1	; 18
 286:	8a 95       	dec	r24
 288:	f1 f7       	brne	.-4      	; 0x286 <HC595Latch+0xc>
     _delay_us(1);
}
 28a:	08 95       	ret

0000028c <__vector_9>:

ISR(TIMER0_OVF_vect)
{
 28c:	1f 92       	push	r1
 28e:	0f 92       	push	r0
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	0f 92       	push	r0
 294:	11 24       	eor	r1, r1
 296:	2f 93       	push	r18
 298:	3f 93       	push	r19
 29a:	4f 93       	push	r20
 29c:	5f 93       	push	r21
 29e:	6f 93       	push	r22
 2a0:	7f 93       	push	r23
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	af 93       	push	r26
 2a8:	bf 93       	push	r27
 2aa:	ef 93       	push	r30
 2ac:	ff 93       	push	r31
    cnt++;
 2ae:	90 91 77 00 	lds	r25, 0x0077
 2b2:	9f 5f       	subi	r25, 0xFF	; 255
 2b4:	90 93 77 00 	sts	0x0077, r25
    chr_tmp = chr;
 2b8:	30 91 74 00 	lds	r19, 0x0074
 2bc:	30 93 79 00 	sts	0x0079, r19
    ind_tmp=ind;
 2c0:	20 91 78 00 	lds	r18, 0x0078
 2c4:	20 93 7a 00 	sts	0x007A, r18
    
    if (cnt==spd)
 2c8:	80 91 73 00 	lds	r24, 0x0073
 2cc:	98 17       	cp	r25, r24
 2ce:	b9 f4       	brne	.+46     	; 0x2fe <__vector_9+0x72>
    {
        cnt=0;
 2d0:	10 92 77 00 	sts	0x0077, r1
        ind++;
 2d4:	82 2f       	mov	r24, r18
 2d6:	8f 5f       	subi	r24, 0xFF	; 255
 2d8:	80 93 78 00 	sts	0x0078, r24
        if (ind==5)
 2dc:	85 30       	cpi	r24, 0x05	; 5
 2de:	09 f0       	breq	.+2      	; 0x2e2 <__vector_9+0x56>
 2e0:	56 c0       	rjmp	.+172    	; 0x38e <__vector_9+0x102>
        {
            ind=0;
 2e2:	10 92 78 00 	sts	0x0078, r1
            chr++;
 2e6:	93 2f       	mov	r25, r19
 2e8:	9f 5f       	subi	r25, 0xFF	; 255
 2ea:	90 93 74 00 	sts	0x0074, r25
            if (chr==len)
 2ee:	80 91 7b 00 	lds	r24, 0x007B
 2f2:	98 17       	cp	r25, r24
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <__vector_9+0x6c>
 2f6:	4b c0       	rjmp	.+150    	; 0x38e <__vector_9+0x102>
            {
                chr=0;
 2f8:	10 92 74 00 	sts	0x0074, r1
 2fc:	48 c0       	rjmp	.+144    	; 0x38e <__vector_9+0x102>
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	50 e0       	ldi	r21, 0x00	; 0
 302:	00 90 76 00 	lds	r0, 0x0076
 306:	02 c0       	rjmp	.+4      	; 0x30c <__vector_9+0x80>
 308:	44 0f       	add	r20, r20
 30a:	55 1f       	adc	r21, r21
 30c:	0a 94       	dec	r0
 30e:	e2 f7       	brpl	.-8      	; 0x308 <__vector_9+0x7c>
        if(ind_tmp==6)//if we get 5. byte of a char we get next char's first byte next time
        {
            chr_tmp++;
            ind_tmp=0;

            if(chr_tmp >=len)
 310:	70 91 7b 00 	lds	r23, 0x007B
 314:	60 e0       	ldi	r22, 0x00	; 0
    {
        uint8_t data;
       
        if(ind_tmp!=5)
        {
            data=PGM_READ_BYTE;
 316:	a5 e0       	ldi	r26, 0x05	; 5
 318:	24 c0       	rjmp	.+72     	; 0x362 <__vector_9+0xd6>
 
    for(col=0;col<COL_CNT;col++)
    {
        uint8_t data;
       
        if(ind_tmp!=5)
 31a:	25 30       	cpi	r18, 0x05	; 5
 31c:	11 f4       	brne	.+4      	; 0x322 <__vector_9+0x96>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	0d c0       	rjmp	.+26     	; 0x33c <__vector_9+0xb0>
        {
            data=PGM_READ_BYTE;
 322:	e3 2f       	mov	r30, r19
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	e0 5a       	subi	r30, 0xA0	; 160
 328:	ff 4f       	sbci	r31, 0xFF	; 255
 32a:	e0 81       	ld	r30, Z
 32c:	ea 9f       	mul	r30, r26
 32e:	f0 01       	movw	r30, r0
 330:	11 24       	eor	r1, r1
 332:	e2 0f       	add	r30, r18
 334:	f1 1d       	adc	r31, r1
 336:	ec 54       	subi	r30, 0x4C	; 76
 338:	f0 40       	sbci	r31, 0x00	; 0
 33a:	84 91       	lpm	r24, Z+
        else
        {
            data=0x00;
        }
    
        if((data & (1<<row)))
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	84 23       	and	r24, r20
 340:	95 23       	and	r25, r21
 342:	89 2b       	or	r24, r25
 344:	11 f0       	breq	.+4      	; 0x34a <__vector_9+0xbe>
            HC595DataHigh();
 346:	90 9a       	sbi	0x12, 0	; 18
 348:	01 c0       	rjmp	.+2      	; 0x34c <__vector_9+0xc0>
        else
            HC595DataLow();
 34a:	90 98       	cbi	0x12, 0	; 18
    HC595_DDR|=((1<<SH_CP_PIN)|(1<<ST_CP_PIN)|(1<<DS_PIN));
}


void HC595Pulse()
{HC595_PORT|=(1<<SH_CP_PIN);
 34c:	92 9a       	sbi	0x12, 2	; 18
 HC595_PORT&=(~(1<<SH_CP_PIN));
 34e:	92 98       	cbi	0x12, 2	; 18
        else
            HC595DataLow();

        HC595Pulse();

        ind_tmp++;
 350:	2f 5f       	subi	r18, 0xFF	; 255

        if(ind_tmp==6)//if we get 5. byte of a char we get next char's first byte next time
 352:	26 30       	cpi	r18, 0x06	; 6
 354:	29 f4       	brne	.+10     	; 0x360 <__vector_9+0xd4>
        {
            chr_tmp++;
 356:	3f 5f       	subi	r19, 0xFF	; 255
            ind_tmp=0;

            if(chr_tmp >=len)
 358:	37 17       	cp	r19, r23
 35a:	08 f0       	brcs	.+2      	; 0x35e <__vector_9+0xd2>
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	6f 5f       	subi	r22, 0xFF	; 255
        }
    
        return;   
    }
 
    for(col=0;col<COL_CNT;col++)
 362:	6e 31       	cpi	r22, 0x1E	; 30
 364:	d0 f2       	brcs	.-76     	; 0x31a <__vector_9+0x8e>
 366:	30 93 79 00 	sts	0x0079, r19
 36a:	20 93 7a 00 	sts	0x007A, r18
 36e:	60 93 75 00 	sts	0x0075, r22
        }           
       
    }
    
    //changes row and cloumns simultaneously
    PORT_ROW=~(1<<row);
 372:	84 2f       	mov	r24, r20
 374:	80 95       	com	r24
 376:	85 bb       	out	0x15, r24	; 21
    HC595Latch();
 378:	0e 94 3d 01 	call	0x27a	; 0x27a <HC595Latch>

    row++;
 37c:	80 91 76 00 	lds	r24, 0x0076
 380:	8f 5f       	subi	r24, 0xFF	; 255
 382:	80 93 76 00 	sts	0x0076, r24
    if(row==ROW_CNT)
 386:	87 30       	cpi	r24, 0x07	; 7
 388:	11 f4       	brne	.+4      	; 0x38e <__vector_9+0x102>
    {
        row=0;
 38a:	10 92 76 00 	sts	0x0076, r1
    }
    
    
}       
 38e:	ff 91       	pop	r31
 390:	ef 91       	pop	r30
 392:	bf 91       	pop	r27
 394:	af 91       	pop	r26
 396:	9f 91       	pop	r25
 398:	8f 91       	pop	r24
 39a:	7f 91       	pop	r23
 39c:	6f 91       	pop	r22
 39e:	5f 91       	pop	r21
 3a0:	4f 91       	pop	r20
 3a2:	3f 91       	pop	r19
 3a4:	2f 91       	pop	r18
 3a6:	0f 90       	pop	r0
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	0f 90       	pop	r0
 3ac:	1f 90       	pop	r1
 3ae:	18 95       	reti

000003b0 <main>:
volatile char string[]="  *Hello world*   ";
uint8_t chr=0,len,col=0,row=0,spd=100,cnt=0,ind=0,chr_tmp,ind_tmp;

int main(void)
{
    DDR_ROW=0xff;
 3b0:	8f ef       	ldi	r24, 0xFF	; 255
 3b2:	84 bb       	out	0x14, r24	; 20
}


void timer_init(void)
{
   TCCR0|=(1<<CS00);//|(1<<CS01); add CS01 if you are going to upload in hardware.
 3b4:	83 b7       	in	r24, 0x33	; 51
 3b6:	81 60       	ori	r24, 0x01	; 1
 3b8:	83 bf       	out	0x33, r24	; 51
    TIMSK|=1<<TOIE0;
 3ba:	89 b7       	in	r24, 0x39	; 57
 3bc:	81 60       	ori	r24, 0x01	; 1
 3be:	89 bf       	out	0x39, r24	; 57
	}

void HC595Init()
{
    HC595_DDR|=((1<<SH_CP_PIN)|(1<<ST_CP_PIN)|(1<<DS_PIN));
 3c0:	81 b3       	in	r24, 0x11	; 17
 3c2:	87 60       	ori	r24, 0x07	; 7
 3c4:	81 bb       	out	0x11, r24	; 17
int main(void)
{
    DDR_ROW=0xff;
    timer_init();
    HC595Init();
    len=strlen(string);
 3c6:	e0 e6       	ldi	r30, 0x60	; 96
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	01 90       	ld	r0, Z+
 3cc:	00 20       	and	r0, r0
 3ce:	e9 f7       	brne	.-6      	; 0x3ca <main+0x1a>
 3d0:	31 97       	sbiw	r30, 0x01	; 1
 3d2:	e0 56       	subi	r30, 0x60	; 96
 3d4:	f0 40       	sbci	r31, 0x00	; 0
 3d6:	e0 93 7b 00 	sts	0x007B, r30
    sei();
 3da:	78 94       	sei
 3dc:	ff cf       	rjmp	.-2      	; 0x3dc <main+0x2c>

000003de <_exit>:
 3de:	f8 94       	cli

000003e0 <__stop_program>:
 3e0:	ff cf       	rjmp	.-2      	; 0x3e0 <__stop_program>
